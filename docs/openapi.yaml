openapi: 3.0.2
info:
  version: 1.1.0
  title: Data Exchange Catalogue Server APIs
  license:
    name: Apache 2.0
  description: |
    # Introduction
    The Catalogue is DXs' (Data Exchange) dataset discovery portal and metadata store. 
    It enables *Providers* of datasources to describe them with DX based annotations
    to make discovery and consumption of data both automatable and semantically describable. 
    For search and discovery, it allows users to search through text queries.
    The catalogue is a [JSON-LD](https://json-ld.org/) document stored and based on the [RDF](https://www.w3.org/RDF/) information exchange model. 

    # Configurations
    - **Server**: 
      - In the doc, we display the server url to be https://example-cat.com with the hostname as example-cat.com
      - This could be configured according to the deployment
    - **Base path**:
      - Base path is the path on which API is served, relative to the host
      - It is the initial part of the API
      - The base path for [DX AAA Server](https://github.com/datakaveri/iudx-aaa-server) is set to `/auth/v1`
      - Currently, `/iudx/cat/v1` is being used as base path for all the DX Catalogue Server APIs
      - These value could be configured according to the deployment
    - **Request Samples**:
      - The `<token>` in the header of request sample could be replaced with respective token value that could be obtained from DX Auth Server
      - The `<payload>` in the request sample could be replaced with the payload given adjacent to the request sample
      - The payload contains `<some_item_id>`, `<provider_id>`, `<some_item_name>`, for which the appropriate values could be added 
    
     # API HTTP Responses
    Apart from the response codes specified in each API,
    the API server may respond with certain 4xx and 5xx error codes which are related to common API Gateway behaviours.
    The application should address them accordingly.
    
    # Pagination
    The Catalogue server supports paginating query results to help users manage large datasets efficiently. If a query returns a large number of records, pagination parameters can be used to control how many results are returned per page and which page to fetch.
    
    - **Pagination is applicable only for:**
      - **/search**

    ðŸ“¥ **Query Parameters for Pagination**:
    - **page**: Specifies which page of the result set to retrieve.  
      *(Default: 1, Min: 1)*

    - **size**: Specifies how many results should be returned per page.  
      *(Default: 100, Min: 1, Max: 10000)*
  contact:
    name: For support contact IUDX Team at
    email: support@cdpg.org.in
    url: https://dataforpublicgood.org.in/
servers:
  - url: 'https://example-cat.com/iudx/cat/v1'
    description: Production Instance
paths:
  /iudx/cat/v1/search:
    post:
      tags:
        - Discovery
      description: |
        Unified catalogue search query for discovering entities that meet complex criteria. The `/search` endpoint supports a rich combination of property-based (`term`), range-based, and temporal-based searches using a common `searchCriteria` array format.

        #### ðŸ“Œ `searchCriteria` Format (Unified)
        Each entry in `searchCriteria` must define:
        - `searchType`: Determines the type of search (e.g., `term`, `betweenRange`, `beforeTemporal`, etc.)
        - `field`: Field to search on (e.g., `type`, `dataReadiness`, `itemCreatedAt`)
        - `values`: Array of values (length depends on `searchType`)

        #### âœ… Supported `searchType` Values and Value Expectations:
        | `searchType`         | Description                                 | Expected `values` Length |
        |----------------------|---------------------------------------------|---------------------------|
        | `term`               | Property-based (exact/approx match)         | â‰¥ 1 values (OR logic)     |
        | `betweenRange`       | Numeric field in a value range              | 2 values (start, end)     |
        | `beforeRange`        | Numeric field before a value                | 1 value                   |
        | `afterRange`         | Numeric field after a value                 | 1 value                   |
        | `betweenTemporal`    | Timestamp field between two dates           | 2 ISO datetime strings    |
        | `beforeTemporal`     | Timestamp before a given date               | 1 ISO datetime string     |
        | `afterTemporal`      | Timestamp after a given date                | 1 ISO datetime string     |

        #### ðŸ§  Term Search (Property-based)
        Property search is allowed only on a predefined set of properties from the DX Schema Vocabulary, applicable to all subClasses of [IUDXEntity](https://voc.iudx.org.in/IUDXEntity).

        - Exact match: Supported for fields like `id`, `type`, `department`, `organizationType`, `modelType`. <br>

        Example:
        ```json
        {
          "searchCriteria": [
            {
              "searchType": "term",
              "field": "type",
              "values": ["adex:DataBank"]
            },
            {
              "searchType": "term",
              "field": "department",
              "values": ["Health", "Environment"]
            }
          ]
        }
        ```

        #### ðŸ“ˆ Range Search (Numeric)
        Filters based on numeric values and supports various relational conditions.
        - Supported `searchType` values:
          - "betweenRange" â†’ values: [min, max]
          - "beforeRange" â†’ values: [value] (less than)
          - "afterRange" â†’ values: [value] (greater than)
        Example:
        ```json
        {
          "searchType": "betweenRange",
          "field": "dataReadiness",
          "values": [50, 80]
        }
        ```

        #### ðŸ•’ Temporal Search
        Filters based on ISO 8601 timestamps for temporal fields.
        - Supported `searchType` values:
          - "betweenTemporal" â†’ values: ["startTime", "endTime"]
          - "beforeTemporal" â†’ values: ["timestamp"]
          - "afterTemporal" â†’ values: ["timestamp"]
        Timestamps must be in ISO 8601 format (`YYYY-MM-DDTHH:mm:ssÂ±hhmm`).
        Example:
        ```json
        {
          "searchType": "beforeTemporal",
          "field": "itemCreatedAt",
          "values": ["2025-04-30T00:00:00+0530"]
        }
        ```

        #### Text Search
        A full-text fuzzy search over indexed fields.
        - Use the `q` field in the root body.
        - Optional flags: `autoComplete`, `fuzzy`.

        #### Complex Search
        Multiple search typesâ€”text, property-based (`term`), temporal, and numeric rangeâ€”can be combined together in a single request using the `searchCriteria` array. Each object in `searchCriteria` must include a `searchType`, the `field` to query, and the appropriate `values` for that type.

        Text-based search can be combined with structured filters. It supports full-text fuzzy matching across indexed fields.

        #### Supported fields for complex search:

        - `q`: A free-form text string to perform full-text search across indexed fields.
        - `fuzzy`: (Optional, boolean) Enables approximate/fuzzy matching.
        - `autoComplete`: (Optional, boolean) Enables search-as-you-type behavior.

        #### Supported `searchType` values in `searchCriteria`:

        - `term`: Property-based filtering using exact or fuzzy match. Accepts one or more 
        values. (OR logic on values.)
        - `betweenTemporal`: Requires exactly **two** ISO 8601 datetime strings â€” interpreted as start and end time.
        - `beforeTemporal`: Requires exactly **one** ISO 8601 datetime string â€” filters entries before the given time.
        - `afterTemporal`: Requires exactly **one** ISO 8601 datetime string â€” filters entries after the given time.
        - `betweenRange`: Requires exactly **two** numeric values â€” interpreted as lower and upper bounds.
        - `beforeRange`: Requires exactly **one** numeric value â€” filters entries below the threshold.
        - `afterRange`: Requires exactly **one** numeric value â€” filters entries above the threshold.

        This unified format supports rich multi-dimensional filtering with both structured and unstructured (text) data.

        #### Example:
        ```json
        {
          "q": "satellite",
          "fuzzy": true,
          "autoComplete": true,
          "searchCriteria": [
            {
              "searchType": "term",
              "field": "type",
              "values": ["adex:DataBank"]
            },
            {
              "searchType": "betweenTemporal",
              "field": "itemCreatedAt",
              "values": ["2024-01-01T00:00:00+0530", "2025-01-01T00:00:00+0530"]
            },
            {
               "searchType": "afterRange",
               "field": "dataReadiness",
               "values": [70]
            }
          ]
        }
        ```

        #### Limits and Filters
        - Pagination: Use `size` and `page` parameters to paginate results.  
          For example, `size=100&page=2` returns 100 results starting from the 101st record (i.e., page 2).  
          Internally, the offset is calculated as `offset = size * (page - 1)`.
        - Field Filtering: Use the `filter` parameter to specify a subset of fields to return.  
          For example, `filter=[id]` returns only the `id` field for each result.
        - Limits: The sum of the internally calculated `offset` and `size` must be less than or equal to `10,000` to prevent overly large queries.

      operationId: search
      security:
        - authorization: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: Page size for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 100
        - name: sort
          in: query
          description: >
            This parameter allows sorting the results by up to 3 fields, separated by a semicolon (;).
            The format for each field is `fieldName:asc` or `fieldName:desc`. 
            For example: `itemCreatedAt:desc;dataReadiness:asc;name:desc` will sort by creation date (descending),
            then dataReadiness (ascending), then name (descending).
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/TextSearchRequest'
                - $ref: '#/components/schemas/SearchCriteriaRequest'
                - $ref: '#/components/schemas/AutocompleteFuzzyTextSearchRequest'
                - $ref: '#/components/schemas/ComplexSearchRequest'
      responses:
        '200':
          description: All the query parameters yielded results.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/successResponseForAutocompleteFuzzyTextSearch'
                  - $ref: '#/components/schemas/successResponseForSearchByItemType'
                  - $ref: '#/components/schemas/successResponseForRangeSearch'
                  - $ref: '#/components/schemas/successResponseForTemporalSearch'
                  - $ref: '#/components/schemas/successResponseForComplexSearch'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForDiscovery'
              examples:
                Invalid Geo Value:
                  value:
                    type: 'urn:dx:cat:InvalidGeoValue'
                    "title": "Geoquery value error"
                    "detail": "Invalid value for a query param"
                Invalid Syntax:
                  value:
                    "type": "urn:dx:cat:InvalidSyntax"
                    "title": "Invalid Syntax"
                    "detail": "Invalid value for a query param"
                Invalid Syntax 1:
                  value:
                    "type": "urn:dx:cat:InvalidSyntax"
                    "title": "Invalid Syntax"
                    "detail": "Mandatory field(s) not provided"
                Precision validation:
                  value:
                    "title": "failed"
                    "type": "urn:dx:cat:InvalidPropertyValue"
                    "detail": "The max point of 'coordinates' precision is 6"
                Coordinate pair:
                  value:
                    "title": "failed"
                    "type": "urn:dx:cat:InvalidPropertyValue"
                    "detail": "The max number of 'coordinates' value is 10"
                Max Distance limit:
                  value:
                    "title": "failed"
                    "type": "urn:dx:cat:InvalidPropertyValue"
                    "detail": "The 'maxDistance' should range between 0-10000m"
                Coordinates value limit:
                  value:
                    "title": "failed"
                    "type": "urn:dx:cat:InvalidPropertyValue"
                    "detail": "Unable to parse 'coordinates'; value is Infinity"
                Invalid request - Max string size:
                  value:
                    "title": "failed"
                    "type": "urn:dx:cat:InvalidPropertyValue"
                    "detail": "The max string(q) size supported is 100"
                Bad filter:
                  value:
                    "title": "failed"
                    "type": "urn:dx:cat:BadFilter"
                    "detail": "The max number of 'filter' should be 10"
                Exceed limit|offset value:
                  value:
                    "title": "failed"
                    "type": "urn:dx:cat:InvalidPropertyValue"
                    "detail": "The limit + offset should be between 1 to 10000"
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: search by item type
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/search?size=100&page=1' \
              --header 'Content-Type: application/json' \
              --data '{
                "searchCriteria": [
                  {
                    "searchType": "term",
                    "field": "type",
                    "values": ["adex:AiModel"]
                  }
                ],
                "filter": ["id"]
              }'
        - lang: cURL
          label: search by text
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/search?size=100&page=1' \
            --header 'Content-Type: application/json' \
            --data '{
              "q": "sat",
              "autoComplete": true,
              "fuzzy": true,
              "filter": ["id", "label", "name", "description", "tags"]
            }'
        - lang: cURL
          label: Temporal search
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/search?size=50&page=1' \
            --header 'Content-Type: application/json' \
            --data '{
              "searchCriteria": [
                {
                  "searchType": "betweenTemporal",
                  "field": "itemCreatedAt",
                  "values": ["2025-03-20T04:00:00+0530", "2025-05-02T09:15:27+0530"]
                },
                {
                  "searchType": "term",
                  "field": "type",
                  "values": ["adex:AiModel"]
                }
              ],
              "filter": ["id","tags","itemCreatedAt"]
            }'
        - lang: cURL
          label: Range search
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/search?size=25&page=1' \
            --header 'Content-Type: application/json' \
            --data '{
              "searchCriteria": [
                {
                  "searchType": "beforeRange",
                  "field": "dataReadiness",
                  "values": [85]
                },
                {
                  "searchType": "term",
                  "field": "type",
                  "values": ["adex:DataBank"]
                }
              ],
              "filter": ["id","dataReadiness","tags"]
            }'
        - lang: cURL
          label: complex search
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/search?size=25&page=1' \
            --header 'Content-Type: application/json' \
            --data '{
              "searchCriteria": [
                {
                  "searchType": "term",
                  "field": "type",
                  "values": ["adex:DataBank"]
                },
                {
                  "searchType": "term",
                  "field": "department",
                  "values": ["Environment Forests Science and Technology"]
                },
                {
                  "searchType": "betweenTemporal",
                  "field": "itemCreatedAt",
                  "values": ["2024-04-20T04:00:00+0530", "2025-05-02T09:15:27+0530"]
                },
                {
                  "searchType": "betweenRange",
                  "field": "dataReadiness",
                  "values": [80, 84]
                }
              ],
              "filter": ["id", "type", "department", "itemCreatedAt", "dataReadiness"]
            }'
  /iudx/cat/v1/search/myassets:
    post:
      summary: Search assets created by the current authenticated user
      description: >
        Returns assets owned by the current authenticated user, using the same
        unified search format as the `/search` endpoint. This endpoint automatically
        filters results to only include items where `ownerUserId` matches the
        authenticated user's `sub` value from the token.

        Supports property-based, temporal, and numeric range filters, as well as
        full-text search.
      operationId: myAssetsSearch
      tags:
        - Discovery
      security:
        - authorization: []
      requestBody:
        description: Request body containing unified search filters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteriaRequest'
      responses:
        '200':
          description: A successful search response with assets owned by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid request query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Missing or invalid authentication token
  /iudx/cat/v1/count:
    post:
      tags:
        - Discovery
      description: |
        Count aggregation query for catalogue metadata using filters defined via `searchCriteria`.

        #### ðŸš© Behavior
        - All objects in the `searchCriteria` array are combined using logical **AND**.
        - Filters with `searchType` of `"term"` and `"range"` (numeric or temporal) are supported.
        - The response always includes a count **aggregated by `type.keyword`**.

        #### ðŸŽ¯ UI Use Case:
        Used in summary dashboards to show:
        - Number of Data Banks (`type=adex:DataBank`)
        - Number of AI Models (`type=adex:AiModel`)
        - Number of Potential Applications (`type=adex:Apps`)
        - Distribution by `type` after applying department/tags/date filters

        > ðŸ“Œ Aggregation is always based on `type.keyword`.  
        > The `results` object contains key-value pairs for each `type`.

      operationId: count
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SearchCriteriaRequest'
      responses:
        '200':
          description: Aggregated count results by `type`
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: urn:dx:cat:Success
                  title:
                    type: string
                    example: Success
                  results:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: integer
                    example:
                      - adex:DataBank: 131
                        adex:Apps: 14
        '400':
          description: Invalid input or unsupported search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForDiscovery'
              examples:
                Missing Search Criteria:
                  value:
                    type: "urn:dx:cat:InvalidSyntax"
                    title: "Missing Search Criteria"
                    detail: "The request must contain a non-empty searchCriteria block."
                Invalid Search Type:
                  value:
                    type: "urn:dx:cat:InvalidPropertyValue"
                    title: "Invalid Search Type"
                    detail: "Only 'term' and range/temporal filters are supported for count aggregation."

  /iudx/cat/v1/list:
    post:
      tags:
        - List
      summary: List available filter values
      description: |
        Retrieve available filter values for specified indexed fields (e.g., tags, department, fileFormat, etc.) based on optional search criteria. 
        This API is intended to assist user interfaces by listing current values from the catalogue, based on indexed fields in Elasticsearch.
      operationId: listAvailableFilters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                searchCriteria:
                  type: array
                  description: Criteria used to narrow down filters (e.g., type of entity).
                  items:
                    type: object
                    required:
                      - searchType
                      - field
                      - values
                    additionalProperties: false
                    properties:
                      searchType:
                        type: string
                        example: term
                        description: The value should be 'term'.
                      field:
                        type: string
                        example: type
                        description: Indexed field name to filter by.
                      values:
                        type: array
                        items:
                          type: string
                        example: [ "adex:DataBank" ]
                filter:
                  type: array
                  description: List of indexed fields for which values should be listed.
                  items:
                    type: string
                  example: [ "tags", "department", "fileFormat" ]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: urn:dx:cat:Success
                  title:
                    type: string
                    example: Success
                  results:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                    example:
                      - tags:
                          - Transport
                          - Community Health
                          - Corporate
                          - Geospatial
                          - HR Analytics
                          - Healthcare
                          - Maternal Health
                          - Network
                          - Performance
                          - Railway
                          - Satellite
                      - department:
                          - Industries and Commerce
                          - Environment Forests Science and Technology
                          - Health Medical and Family Welfare
                          - Home
                      - fileFormat:
                          - pdf
                          - csv
        '400':
          description: Bad Request â€“ Malformed request or unsupported filters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: urn:dx:cat:InvalidSyntax
                  title:
                    type: string
                    example: Invalid Syntax
                  detail:
                    type: string
                    example: "Wrong Item Type"
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: list indexed filter values
          source: |
            curl --location 'https://example-cat.com/iudx/cat/v1/list' \
            --header 'Content-Type: application/json' \
            --data '{
              "searchCriteria": [
                {
                  "searchType": "term",
                  "field": "type",
                  "values": ["adex:DataBank"]
                }
              ],
              "filter": ["tags", "department", "organizationType", "fileFormat", "dataReadiness"]
            }'
  /iudx/cat/v1/item:
    post:
      tags:
        - Entity

      description: |
        Insert an item into the catalogue where the item's body specifies the type of item and 
        instance name. id, itemCreatedAt and itemStatus are added by server. Items maybe subClasses of type 
        [IUDXEntity](https://voc.iudx.org.in/IUDXEntity). Depending on this, some properties maybe mandatory. The json schema for the different types can be found [here](https://github.com/datakaveri/iudx-catalogue-server/tree/master/src/main/resources/iudx/catalogue/server/validator). In the future, we will serve schemas from our own servers.
      operationId: create item
      security:
        - authorization: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/exampleEntityAIModel'
                - $ref: '#/components/schemas/exampleEntityDataBank'
                - $ref: '#/components/schemas/exampleEntityPotentialApps'
      responses:
        '201':
          description: Successfully inserted
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/successResponseForCreateAIModelEntity'
                  - $ref: '#/components/schemas/successResponseForCreateDataBankResourceEntity'
                  - $ref: '#/components/schemas/successResponseForCreatePotentialAppsEntity'
        '400':
          description: Invalid document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/errorInvalidSchema'
                  - $ref: '#/components/schemas/errorInvalidUUID'
                  - $ref: '#/components/schemas/errorInvalidLinks'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseWithObjects'
              examples:
                Unauthorized:
                  value:
                    type: 'urn:dx:cat:InvalidAuthorizationToken'
                    title: 'Token is invalid'
                    detail: 'failed to decode/validate jwt token : Invalid format for JWT'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: create item cURL
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/item/' \
            --header 'Authorization: Bearer <keycloak_token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'

    put:
      tags:
        - Entity
      description: |
        Update an item where the body contains a fully valid item with id. Relationship links like
        organizationId and "name" are not allowed to be updated. 
        itemStatus is added by backend.
        Items maybe subClasses of type [IUDXEntity](https://voc.iudx.org.in/IUDXEntity). Depending on this, some properties maybe mandatory.
        The json schema for the different types can be found [here](https://github.com/datakaveri/iudx-catalogue-server/tree/master/src/main/resources/iudx/catalogue/server/validator). In the future, we will serve schemas from our own servers.
        #### Non-updateable fields
        In case update of these fields is required, it is recommended to delete the item
        and re-upload it.
        
        1. adex:DataBank
           - id
           - organizationId
           - name 
           - type (1st element in array non-modifiable)
           - itemStatus
        
        2. adex:AiModel
           - id
           - name
           - provider
           - type (1st element in array non-modifiable)
           - itemStatus
        
        3. adex:Apps
           - id
           - name
           - type (1st element in array non-modifiable)
           - itemStatus
      operationId: update item
      security:
        - authorization: []

      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/exampleEntityWIdAIModel'
                - $ref: '#/components/schemas/exampleEntityWIdDataBankResource'
                - $ref: '#/components/schemas/exampleEntityWIdAdexApps'
      responses:
        '200':
          description: Successfully inserted
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/successResponseForUpdateAIModelEntity'
                  - $ref: '#/components/schemas/successResponseForUpdateDataBankEntity'
                  - $ref: '#/components/schemas/successResponseForUpdateAdexAppsEntity'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/errorInvalidSchema2'
                  - $ref: '#/components/schemas/errorInvalidLinks'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseWithObjects'
              examples:
                Unauthorized:
                  value:
                    type: 'urn:dx:cat:InvalidAuthorizationToken'
                    title: 'Token is invalid'
                    detail: 'failed to decode/validate jwt token : Invalid format for JWT'
        '404':
          description: Document doesn't exist to update it
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateItemNotFound'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: update item cURL
          source: |
            curl --location --request PUT 'https://example-cat.com/iudx/cat/v1/item/' \
            --header 'token: <token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'

    get:
      tags:
        - Entity
      description: >
        Get an item given the ID.

        If a Bearer token is provided in the Authorization header, the request will be authenticated and an audit log entry will be created for a **View** operation.
      operationId: get item
      security:
        - authorization: []
      parameters:
        - name: id
          in: query
          description: ID of the DX Entity
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Found the item.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/successResponseForGetAIModelEntity'
                  - $ref: '#/components/schemas/successResponseForGetDataBankEntity'
                  - $ref: '#/components/schemas/successResponseForGetAdexAppsEntity'
        '400':
          description: Invalid ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidIdErrorResponse'
        '404':
          description: Didn't find the item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForGetEntity'
              example:
                type: "urn:dx:cat:ItemNotFound"
                title: 'error'
                totalHits: 0
                results:
                  [ ]
                details: "doc doesn't exist"

      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: item by id
          source: |
            curl --location --request GET 'https://example-cat.com/iudx/cat/v1/item?id=uuid'
    delete:
      tags:
        - Entity
      description: Delete an item
      operationId: delete item
      security:
        - authorization: []
      parameters:
        - name: id
          in: query
          description: ID of the DX Entity
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseWithObjects'
              examples:
                Delete Success:
                  value:
                    type: 'urn:dx:cat:Success'
                    title: Success
                    results:
                      - id: "6e58c916-f6c1-448d-acea-756f3272bc57"
                    detail: 'Success: Item deleted successfully'
        '400':
          description: Invalid uuid format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
              examples:
                Invalid uuid:
                  value:
                    type: 'urn:dx:cat:InvalidSyntax'
                    title: "Invalid Syntax"
                    detail: "Fail: The syntax of the id is incorrect"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
        '404':
          description: Didn't find the item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
              examples:
                Item not found to Delete:
                  value:
                    type: 'urn:dx:cat:ItemNotFound'
                    title: "Item is not found"
                    details: "Fail: Doc doesn't exist, can't perform operation"
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: delete item
          source: |
            curl --location --request DELETE 'https://example-cat.com/iudx/cat/v1/item?id=uuid' \
            --header 'token: <token>'
tags:
  - name: Entity
    description: |
      Manage catalogue entities and perform Create/Update/Read/Delete operations on them.
      These apis are intended to be used by DX(Data Exchange) Data *Providers*.
    x-displayName: Entity
  - name: Discovery
    description: |
      Discovery DX Entities using a rich discovery api supporting property, text and geo-based queries.
      These apis are intended to be used by DX(Data Exchange) Data *Consumers*.
      <br> Geo-Query APIs list the location of the dataset ids' given in the request body of a particular instance
    x-displayName: Discovery
  - name: List
    description: |
      List DX Entities of a certain type.
      These apis are intended to be used by User Interfaces.
    x-displayName: List
components:
  securitySchemes:
    authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    successResponseWithObjects:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human readable title to the message response.
      required:
        - type
      x-examples:
        Example 1:
          type: 'urn:dx:cat:Success'
          title: Success
          totalHits: 10
          results:
            - id: uuid
              name: wifi-location
              type:
                - 'iudx:Resource'
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 10
        results:
          - id: uuid
            name: wifi-location
            type:
              - 'iudx:Resource'
    successResponseForCount:
      type: object
      title: Root Type for Count APIs
      description: 'Response for successful count query'
      properties:
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          description: A human readable title to the message response.
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
      required:
        - type
    errorResponseForDiscovery:
      type: object
      title: Root Type for Discovery APIs
      description: 'Standard Error Response for the search, count and geo queries'
      properties:
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          description: A human readable title to the message response.
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: <error urn>
        title: <error title
        detail: <error detail description>
    successResponseForGeoLocations:
      type: object
      title: Response for get geolocations
      description: Example response for a geocoding API
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 3
        results:
          - name: Mallesvaram
            country: India
            region: Karnataka
            county: Bangalore
            locality: Bangalore
            borough: West Bangalore
            bbox:
              - 77.563072
              - 12.968362
              - 77.573072
              - 12.978362
    listInstances:
      type: object
      title: Response for list with instance type
      description: Example response for list types
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 3
        results:
          - pune
          - stqc
          - surat
    AutocompleteFuzzyTextSearchRequest:
      type: object
      additionalProperties: false
      properties:
        q:
          type: string
          description: The search query string for autocomplete.
        fuzzy:
          type: boolean
          description: Enables fuzzy matching for the search query.
        autoComplete:
          type: boolean
          description: Enables autocomplete suggestions.
        filter:
          type: array
          items:
            type: string
          description: List of properties to include in the response (e.g., id, label, name, description, tags).
      required:
        - q
      example:
        q: "sat"
        autoComplete: true
        fuzzy: true
        filter:
          - "id"
          - "label"
          - "name"
          - "description"
          - "tags"
    SearchCriteriaRequest:
      type: object
      additionalProperties: false   # (or true, if you prefer)
      properties:
        searchCriteria:
          type: array
          items:
            $ref: '#/components/schemas/SearchCriteria'
        filter:
          type: array
          items:
            type: string
          description: List of fields to return
      required:
        - searchCriteria
    TextSearchRequest:
      type: object
      additionalProperties: false
      properties:
        q:
          type: string
          description: The search query string.
        fuzzy:
          type: boolean
          description: Enables fuzzy matching.
        autoComplete:
          type: boolean
          description: Enables autocomplete suggestions.
      required:
        - q
    ComplexSearchRequest:
      type: object
      additionalProperties: false
      properties:
        q:
          type: string
          description: The search query string.
        fuzzy:
          type: boolean
          description: Enables fuzzy matching.
        autoComplete:
          type: boolean
          description: Enables autocomplete suggestions.
        searchCriteria:
          type: array
          items:
            $ref: '#/components/schemas/SearchCriteria'
          description: List of property-based search criteria.
      required:
        - q
        - searchCriteria
    SearchCriteria:
      type: object
      additionalProperties: false
      required:
        - field
        - searchType
        - values
      properties:
        field:
          type: string
          description: Name of the property to filter.
        searchType:
          type: string
          enum:
            - term
            - betweenTemporal
            - beforeTemporal
            - afterTemporal
            - betweenRange
            - beforeRange
            - afterRange
          description: |
            Type of search to apply. Valid types:
            - term: Property match
            - betweenTemporal: ISO datetime range
            - beforeTemporal: Before datetime
            - afterTemporal: After datetime
            - betweenRange: Numeric range
            - beforeRange: Less than value
            - afterRange: Greater than value
        values:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
          description: |
            Values for the selected `searchType`. Required value format:
            - `term`: One or more strings
            - `betweenTemporal`: Two ISO date-time strings
            - `beforeTemporal` / `afterTemporal`: One ISO date-time string
            - `betweenRange`: Two numbers
            - `beforeRange` / `afterRange`: One number
    SearchResponse:
      type: object
      properties:
        type:
          type: string
          example: urn:dx:cat:Success
        title:
          type: string
          example: Success
        results:
          type: array
          items:
            type: object
            description: Search result item.
      required:
        - type
        - title
        - results
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          example: urn:dx:cat:InvalidRequest
        title:
          type: string
          example: Invalid Request
        detail:
          type: string
          example: The request payload is invalid.
      required:
        - type
        - title
        - detail
    invalidIdErrorResponse:
      type: object
      title: Invalid ID
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          type: string
          description: A human readable title to the message response.
        detail:
          type: string
          description: Detailed description of the type or response
      example:
        type: 'urn:dx:cat:InvalidUUID'
        title: Invalid syntax of uuid
        detail: The id is invalid
    errorResponseForGetEntity:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          description: A human readable title to the message response.
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response

      required:
        - type
      example:
        type: 'urn:dx:cat:ItemNotFound'
        title: error
        totalHits: 0
        results: [ ]
        detail: 'doc does not exist'
    exampleEntityWIdAIModel:
      type: object
      title: AI Model entity
      description: An example AI model entity for first-time onboarding (without system-generated fields like itemCreatedAt or itemStatus)
      properties:
        '@context':
          type: string
          format: uri
        id:
          type: string
          pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'
        name:
          type: string
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
          maxLength: 512
        type:
          type: array
          items:
            type: string
        label:
          type: string
          maxLength: 512
        shortDescription:
          type: string
          maxLength: 512
        description:
          type: string
          maxLength: 4000
        tags:
          type: array
          items:
            type: string
        organizationId:
          type: string
          pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'
        accessPolicy:
          type: string
          pattern: '^(RESTRICTED|OPEN|PRIVATE)$'
        organizationType:
          type: string
          enum: [ 'Private', 'Public', 'Academic Institution', "NGO/Non-profit", 'NA', '' ]
        department:
          type: string
        modelType:
          type: string
        fileFormat:
          type: string
        mediaURL:
          type: string
        industry:
          type: string
        uploadedBy:
          type: string
        license:
          type: string
        fileSize:
          type: string
      required:
        - type
        - name
        - label
        - shortDescription
        - description
        - tags
        - organizationId
        - accessPolicy
        - organizationType
        - department
        - modelType
        - fileFormat
        - mediaURL
        - industry
        - uploadedBy
        - license
        - fileSize
      example:
        '@context': 'https://agrijson.org'
        id: '8b95ab80-2aaf-4636-a65e-7f2563d0d371'
        type:
          - 'adex:AiModel'
        name: 'ai-model-crop'
        label: 'Test-Crop Disease Detection Model'
        shortDescription: 'Detects diseases in crop leaves using image classification.'
        description: 'A test AI model for detecting crop disease with the help of infected leaf images.'
        tags:
          - ai
          - ml
          - model
          - aimodel
          - mlmodel
          - ai-model
          - ml-model
          - machine
          - learning
          - machine learning
          - training
          - algorithm
        organizationId: '337545aa-1fa5-4ca0-bf3d-072144dec5b6'
        accessPolicy: 'RESTRICTED'
        organizationType: 'Private'
        department: 'Agriculture and Co-operation'
        modelType: 'ImageClassifier'
        fileFormat: 'ipynb'
        industry: 'Agriculture'
        mediaURL: 'someUrl'
        uploadedBy: 'john.doe@datakaveri.org'
        license: 'MIT'
        fileSize: '15MB'
    exampleEntityWIdDataBankResource:
      type: object
      title: Data Bank Resource Entity
      description: Payload for updating item with ID
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        label:
          type: string
          maxLength: 512
        description:
          type: string
          maxLength: 4000
        shortDescription:
          type: string
          maxLength: 512
        tags:
          type: array
          items:
            type: string
        organizationId:
          type: string
          format: uuid
        accessPolicy:
          type: string
        organizationType:
          type: string
        fileFormat:
          type: string
        dataReadiness:
          type: integer
          minimum: 0
          maximum: 100
        industry:
          type: string
        uploadedBy:
          type: string
        geoCoverage:
          type: string
        yearRange:
          type: string
        verifiedBy:
          type: string
        uploadFrequency:
          type: string
        license:
          type: string
        department:
          type: string
        resourceType:
          type: string
      required:
        - type
        - name
        - label
        - description
        - shortDescription
        - tags
        - organizationId
        - accessPolicy
        - organizationType
        - fileFormat
        - department
        - resourceType
        - industry
        - uploadedBy
        - geoCoverage
        - yearRange
        - verifiedBy
        - uploadFrequency
        - license
      example:
        '@context': 'https://agrijson.org'
        type:
          - 'adex:DataBank'
        name: subdistrict-weather-info
        label: Subdistrict Weather Info
        description: Weather-related statistics like rainfall and temperature for subdistricts.
        shortDescription: A short description about the item
        tags:
          - environment
          - weather
          - rainfall
          - temperature
        organizationId: '337545aa-1fa5-4ca0-bf3d-072144dec5b6'
        accessPolicy: RESTRICTED
        organizationType: Private
        fileFormat: .xl
        industry: Climate Research
        uploadedBy: 'john.doe@datakaveri.org'
        geoCoverage: Pan India
        yearRange: '2015-2023'
        verifiedBy: 'Ministry of Earth Sciences'
        uploadFrequency: Weekly
        license: CC-BY 4.0
        department: Department of IT, Electronics and Communication
        resourceType: DATASET
    exampleEntityWIdAdexApps:
      type: object
      title: ADeX App entity
      description: An example ADeX potential application entity for onboarding
      properties:
        '@context':
          type: string
          format: uri
        id:
          type: string
          pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'
        name:
          type: string
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
          maxLength: 512
        type:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        label:
          type: string
          maxLength: 512
        shortDescription:
          type: string
          maxLength: 512
        description:
          type: string
          maxLength: 4000
        organizationType:
          type: string
          enum: [ 'Private', 'Public', 'Academic Institution', "NGO/Non-profit", 'NA', '' ]
        department:
          type: string
        canBeUsedFor:
          type: object
          additionalProperties:
            type: string
            maxLength: 300
          maxProperties: 5
        dataInputsAndAiTechniques:
          type: object
          properties:
            Input Data Banks:
              type: array
              items:
                type: string
                maxLength: 200
            Expected Output:
              type: array
              items:
                type: string
                maxLength: 200
            AI Models:
              type: array
              items:
                type: string
                maxLength: 200
            Potential Benefits:
              type: array
              items:
                type: string
                maxLength: 200
          required:
            - Input Data Banks
            - Expected Output
            - AI Models
            - Potential Benefits
          additionalProperties: false
        itemStatus:
          type: string
          enum: [ 'ACTIVE', 'INACTIVE' ]
        itemCreatedAt:
          type: string
          format: date-time
        uploadedBy:
          type: string
          format: email
        fileFormat:
          type: string
        accessPolicy:
          type: string
          enum: [ 'Public', 'Private' ]
      required:
        - name
        - type
        - tags
        - label
        - shortDescription
        - description
        - organizationType
        - department
        - uploadedBy
        - fileFormat
        - accessPolicy
        - canBeUsedFor
        - dataInputsAndAiTechniques
      example:
        type:
          - 'adex:Apps'
        name: 'crop-disease-app'
        tags:
          - ai
          - ml
          - model
          - ai-model
          - ml-model
          - machine
          - learning
          - machine learning
          - training
          - algorithm
        label: 'Test-Crop Disease Detection Model'
        shortDescription: 'A test potential application item for detecting crop disease'
        description: 'A test potential application item for detecting crop disease with the help of infected leaf images.'
        organizationType: 'Private'
        department: 'Agriculture and Co-operation'
        uploadedBy: 'cdpg@datakaveri.org'
        fileFormat: 'xlsx'
        accessPolicy: 'Public'
        canBeUsedFor:
          cropMonitoring: 'Detect and classify diseases in crops using image input'
          yieldOptimization: 'Improve crop yield by early detection of diseases'
        dataInputsAndAiTechniques:
          Input Data Banks:
            - 'Annotated Leaf Image Dataset'
            - 'Crop Type Classification Data'
          Expected Output:
            - 'Disease Type'
            - 'Confidence Score'
            - 'Recommended Treatment'
          AI Models:
            - 'Convolutional Neural Networks'
            - 'Transfer Learning'
          Potential Benefits:
            - 'Early detection of crop diseases'
            - 'Reduction in crop loss'
            - 'Better planning and resource allocation'
    successResponseForCreateAIModelEntity:
      type: object
      title: AI Model Entity
      description: An AI Model item is successfully created
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          properties:
            '@context':
              type: string
              format: uri
              description: JSON-LD context URI
            id:
              type: string
              pattern: "^[a-zA-Z0-9\\-]{36}$"
              description: Unique identifier of the model item
            type:
              type: array
              items:
                type: string
              description: Type tags from the ADeX vocabulary
            name:
              type: string
              maxLength: 512
              pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
              description: Name of the AI Model item
            provider:
              type: string
              format: uuid
              maxLength: 36
              description: Provider id of the AI Model item
            tags:
              type: array
              items:
                type: string
              description: Tags associated with the AI Model item
            accessPolicy:
              type: string
              pattern: "^(RESTRICTED|OPEN|PRIVATE)$"
              description: Access policy for the model
            label:
              type: string
              maxLength: 512
              description: User-friendly label for the model
            description:
              type: string
              description: Detailed description of the model
            organizationType:
              type: string
              description: Type of organization providing the model
            department:
              type: string
              description: Department name
            modelType:
              type: string
              description: Type of model (e.g., ImageClassifier, TimeSeriesPredictor)
            fileFormat:
              type: string
              description: File format of the model
            itemStatus:
              type: string
              enum: [ "ACTIVE", "INACTIVE" ]
              description: Current status of the model
            itemCreatedAt:
              type: string
              format: date-time
              description: Creation timestamp of the model item
          required:
            - name
            - type
            - label
            - shortDescription
            - description
            - tags
            - provider
            - accessPolicy
            - organizationType
            - department
            - modelType
            - fileFormat
            - industry
            - uploadedBy
            - license
            - fileSize
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        detail: 'Success: Item created'
        results:
          '@context': 'https://agrijson.org'
          id: '337545aa-1fa5-4ca0-bf3d-072144dec5b6'
          ownerUserId: "b2c27f3f-2524-4a84-816e-91f9ab23f837"
          type:
            - 'adex:AiModel'
          name: 'ai-model-crop'
          label: 'Test-Crop Disease Detection Model'
          shortDescription: 'Detects diseases in crop leaves using image classification.'
          description: 'A test AI model for detecting crop disease with the help of infected leaf images.'
          tags:
            - ai
            - ml
            - model
            - ai-model
            - ml-model
            - machine
            - learning
            - machine learning
            - training
            - algorithm
          accessPolicy: 'RESTRICTED'
          organizationType: 'Private'
          department: 'Agriculture and Co-operation'
          modelType: 'ImageClassifier'
          fileFormat: 'ipynb'
          industry: 'Agriculture'
          uploadedBy: 'john.doe@datakaveri.org'
          license: 'MIT'
          fileSize: '15MB'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-05T02:09:10+0530"
    successResponseForCreateDataBankResourceEntity:
      type: object
      title: Data Bank Resource Entity
      description: A Data Bank Resource item is successfully created
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          properties:
            '@context':
              type: string
              description: Context URL of the Data Bank Resource item.
            id:
              type: string
              description: ID of the Data Bank Resource item.
            type:
              type: array
              items:
                type: string
              description: Type of the Data Bank Resource item.
            description:
              type: string
              description: Description of the Data Bank Resource item.
            label:
              type: string
              description: Label of the Data Bank Resource item.
            tags:
              type: array
              items:
                type: string
              description: Tags associated with the Data Bank Resource item.
            itemStatus:
              type: string
              description: Status of the Data Bank Resource item.
            itemCreatedAt:
              type: string
              format: date-time
              description: Creation timestamp of the Data Bank Resource item.
            domain:
              type: array
              items:
                type: string
              description: The domain(s) that the Data Bank Resource item belongs to.
          required:
            - name
            - type
            - label
            - shortDescription
            - description
            - tags
            - accessPolicy
            - organizationType
            - fileFormat
            - department
            - resourceType
            - industry
            - uploadedBy
            - geoCoverage
            - yearRange
            - verifiedBy
            - uploadFrequency
            - license
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        detail: 'Success: Item created'
        results:
          '@context': "https://agrijson.org"
          type:
            - "adex:DataBank"
          id: "e27a1f6c-6a1b-45b8-a9f5-0c7424d1f0d1"
          ownerUserId: "b2c27f3f-2524-4a84-816e-91f9ab23f837"
          name: 'subdistrict-weather-info'
          label: 'Weather insights for subdistricts'
          shortDescription: 'A short description about the dataset'
          description: 'Dataset providing weather information such as temperature and rainfall for subdistricts across a state.'
          tags:
            - environment
            - weather
            - rainfall
            - temperature
          accessPolicy: 'RESTRICTED'
          organizationType: 'Private'
          fileFormat: 'xlsx'
          department: 'Department of IT, Electronics and Communication'
          resourceType: 'DATASET'
          industry: 'Climate Research'
          uploadedBy: 'john.doe@datakaveri.org'
          geoCoverage: 'Karnataka'
          yearRange: '2015-2023'
          verifiedBy: 'Ministry of Earth Sciences'
          uploadFrequency: 'Weekly'
          license: 'CC-BY 4.0'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-05T02:09:10+0530"
    successResponseForCreatePotentialAppsEntity:
      type: object
      title: Potential Applications Entity
      description: An ADeX Potential Application item is successfully created
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          properties:
            '@context':
              type: string
              format: uri
              description: JSON-LD context URI
            id:
              type: string
              pattern: "^[a-zA-Z0-9\\-]{36}$"
              description: Unique identifier of the application item
            type:
              type: array
              items:
                type: string
              description: Type tags from the ADeX vocabulary
            name:
              type: string
              maxLength: 512
              pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
              description: Name of the ADeX Application item
            tags:
              type: array
              items:
                type: string
              description: Tags associated with the ADeX Application item
            label:
              type: string
              maxLength: 512
              description: User-friendly label for the application
            description:
              type: string
              description: Detailed description of the application
            organizationType:
              type: string
              description: Type of organization providing the application
            department:
              type: string
              description: Department name
            itemStatus:
              type: string
              enum: [ "ACTIVE", "INACTIVE" ]
              description: Current status of the application
            itemCreatedAt:
              type: string
              format: date-time
              description: Creation timestamp of the application item
          required:
            - name
            - type
            - tags
            - label
            - shortDescription
            - description
            - organizationType
            - department
            - uploadedBy
            - fileFormat
            - accessPolicy
            - canBeUsedFor
            - dataInputsAndAiTechniques
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        detail: 'Success: Item created'
        results:
          '@context': "https://agrijson.org"
          id: 'f2c6a437-8109-4a2c-8923-efc2a9e6df1d'
          type:
            - 'adex:Apps'
          name: 'crop-disease-detector-app'
          label: 'Crop Disease Detection Application'
          shortDescription: 'An AI-powered application to detect crop diseases early using leaf imagery.'
          description: 'A potential application designed to detect crop diseases from infected leaf images using AI/ML models. It supports early intervention and yield optimization by analyzing input data and recommending treatments.'
          tags:
            - ai
            - ml
            - model
            - ai-model
            - ml-model
            - machine
            - learning
            - machine learning
            - training
            - algorithm
          organizationType: 'Private'
          department: 'Agriculture and Co-operation'
          uploadedBy: 'cdpg@datakaveri.org'
          fileFormat: 'xlsx'
          accessPolicy: 'Public'
          canBeUsedFor:
            cropMonitoring: 'Detect and classify diseases in crops using image input'
            yieldOptimization: 'Improve crop yield by early detection of diseases'
          dataInputsAndAiTechniques:
            Input Data Banks:
              - 'Annotated Leaf Image Dataset'
              - 'Crop Type Classification Data'
            Expected Output:
              - 'Disease Type'
              - 'Confidence Score'
              - 'Recommended Treatment'
            AI Models:
              - 'Convolutional Neural Networks'
              - 'Transfer Learning'
            Potential Benefits:
              - 'Early detection of crop diseases'
              - 'Reduction in crop loss'
              - 'Better planning and resource allocation'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-05T02:09:10+0530"
    successResponseForUpdateAIModelEntity:
      type: object
      title: AI Model Entity
      description: AI Model item is successfully updated
      properties:
        type:
          type: string
          description: URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          properties:
            '@context':
              type: string
              format: uri
            id:
              type: string
              pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'
            name:
              type: string
              pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
              maxLength: 512
            type:
              type: array
              items:
                type: string
            label:
              type: string
              maxLength: 512
            shortDescription:
              type: string
              maxLength: 512
            description:
              type: string
              maxLength: 4000
            tags:
              type: array
              items:
                type: string
            accessPolicy:
              type: string
              pattern: '^(RESTRICTED|OPEN|PRIVATE)$'
            organizationType:
              type: string
              enum: [ 'Private', 'Public', 'Academic Institution', "NGO/Non-profit", 'NA', '' ]
            department:
              type: string
            modelType:
              type: string
            fileFormat:
              type: string
            industry:
              type: string
            uploadedBy:
              type: string
            license:
              type: string
            fileSize:
              type: string
          required:
            - type
            - name
            - label
            - shortDescription
            - description
            - tags
            - accessPolicy
            - organizationType
            - department
            - modelType
            - fileFormat
            - industry
            - uploadedBy
            - license
            - fileSize
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        detail: 'Success: Item updated successfully'
        results:
          '@context': 'https://agrijson.org'
          id: '8b95ab80-2aaf-4636-a65e-7f2563d0d371'
          type:
            [ 'adex:AiModel' ]
          name: 'ai-model-crop'
          label: 'Test-Crop Disease Detection Model'
          shortDescription: 'Detects diseases in crop leaves using image classification.'
          description: 'A test AI model for detecting crop disease with the help of infected leaf images.'
          tags:
            - ai
            - ml
            - model
            - aimodel
            - mlmodel
            - ai-model
            - ml-model
            - machine
            - learning
            - machine learning
            - training
            - algorithm
          resourceType: 'MODEL'
          accessPolicy: 'RESTRICTED'
          organizationType: 'Private'
          department: 'Agriculture and Co-operation'
          modelType: 'ImageClassifier'
          fileFormat: 'ipynb'
          industry: 'Agriculture'
          uploadedBy: 'john.doe@datakaveri.org'
          ownerUserId: "b2c27f3f-2524-4a84-816e-91f9ab23f837"
          license: 'MIT'
          fileSize: '15MB'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-07T04:53:31+0530"
    successResponseForUpdateDataBankEntity:
      type: object
      title: DataBank Entity
      description: DataBank item is successfully updated
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          properties:
            '@context':
              type: string
            type:
              type: array
              items:
                type: string
            name:
              type: string
            label:
              type: string
            description:
              type: string
              maxLength: 4000
            shortDescription:
              type: string
              maxLength: 512
            tags:
              type: array
              items:
                type: string
            provider:
              type: string
              format: uuid
            resourceGroup:
              type: string
              format: uuid
            resourceServer:
              type: string
              format: uuid
            accessPolicy:
              type: string
            organizationType:
              type: string
            fileFormat:
              type: string
            industry:
              type: string
            uploadedBy:
              type: string
            geoCoverage:
              type: string
            yearRange:
              type: string
            verifiedBy:
              type: string
            uploadFrequency:
              type: string
            license:
              type: string
            department:
              type: string
            resourceType:
              type: string
          required:
            - type
            - name
            - label
            - description
            - shortDescription
            - tags
            - accessPolicy
            - organizationType
            - fileFormat
            - department
            - resourceType
            - industry
            - uploadedBy
            - geoCoverage
            - yearRange
            - verifiedBy
            - uploadFrequency
            - license
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        results:
          '@context': 'https://agrijson.org'
          type:
            - 'adex:DataBank'
          name: subdistrict-weather-info
          label: Subdistrict Weather Info
          description: Weather-related statistics like rainfall and temperature for subdistricts.
          shortDescription: A short description about the item
          tags:
            - environment
            - weather
            - rainfall
            - temperature
          organizationId: '85bc97bf-904f-2306-gb49-89d77896cf2e'
          ownerUserId: "b2c27f3f-2524-4a84-816e-91f9ab23f837"
          accessPolicy: RESTRICTED
          organizationType: Private
          fileFormat: .xls
          industry: Climate Research
          uploadedBy: 'john.doe@datakaveri.org'
          geoCoverage: Pan India
          yearRange: '2015-2023'
          verifiedBy: 'Ministry of Earth Sciences'
          uploadFrequency: Weekly
          license: CC-BY 4.0
          department: Department of IT, Electronics and Communication
          resourceType: DATASET
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-07T04:53:31+0530"
    successResponseForUpdateAdexAppsEntity:
      type: object
      title: ADeX Potential Application Entity
      description: ADeX Application metadata item is successfully updated
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          properties:
            '@context':
              type: string
              format: uri
            id:
              type: string
              pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'
            name:
              type: string
              pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
              maxLength: 512
            type:
              type: array
              items:
                type: string
            tags:
              type: array
              items:
                type: string
            label:
              type: string
              maxLength: 512
            shortDescription:
              type: string
              maxLength: 512
            description:
              type: string
              maxLength: 4000
            organizationType:
              type: string
              enum: [ 'Private', 'Public', "Academic Institution", "NGO/Non-profit", "NA", '' ]
            department:
              type: string
            canBeUsedFor:
              type: object
              additionalProperties:
                type: string
                maxLength: 300
              maxProperties: 5
            dataInputsAndAiTechniques:
              type: object
              properties:
                Input Data Banks:
                  type: array
                  items:
                    type: string
                    maxLength: 200
                Expected Output:
                  type: array
                  items:
                    type: string
                    maxLength: 200
                AI Models:
                  type: array
                  items:
                    type: string
                    maxLength: 200
                Potential Benefits:
                  type: array
                  items:
                    type: string
                    maxLength: 200
              required:
                - Input Data Banks
                - Expected Output
                - AI Models
                - Potential Benefits
              additionalProperties: false
            itemStatus:
              type: string
              enum: [ 'ACTIVE', 'INACTIVE' ]
            itemCreatedAt:
              type: string
              format: date-time
            uploadedBy:
              type: string
              format: email
            fileFormat:
              type: string
            accessPolicy:
              type: string
              enum: [ 'Public', 'Private' ]
          required:
            - name
            - type
            - tags
            - label
            - shortDescription
            - description
            - organizationType
            - department
            - uploadedBy
            - fileFormat
            - accessPolicy
            - canBeUsedFor
            - dataInputsAndAiTechniques
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        detail: 'Success: Item updated successfully'
        results:
          "@context": "https://agrijson.org"
          type: [ "adex:Apps" ]
          id: "8b95ab80-2aaf-4636-a65e-7f2563d0d371"
          name: 'crop-disease-app'
          tags:
            - ai
            - ml
            - model
            - ai-model
            - ml-model
            - machine
            - learning
            - machine learning
            - training
            - algorithm
          label: 'Test-Crop Disease Detection Model'
          shortDescription: 'A test potential application item for detecting crop disease'
          description: 'A test potential application item for detecting crop disease with the help of infected leaf images.'
          organizationType: 'Private'
          department: 'Agriculture and Co-operation'
          uploadedBy: 'cdpg@datakaveri.org'
          fileFormat: 'xlsx'
          accessPolicy: 'Public'
          canBeUsedFor:
            cropMonitoring: 'Detect and classify diseases in crops using image input'
            yieldOptimization: 'Improve crop yield by early detection of diseases'
          dataInputsAndAiTechniques:
            Input Data Banks:
              - 'Annotated Leaf Image Dataset'
              - 'Crop Type Classification Data'
            Expected Output:
              - 'Disease Type'
              - 'Confidence Score'
              - 'Recommended Treatment'
            AI Models:
              - 'Convolutional Neural Networks'
              - 'Transfer Learning'
            Potential Benefits:
              - 'Early detection of crop diseases'
              - 'Reduction in crop loss'
              - 'Better planning and resource allocation'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-07T04:53:31+0530"
    successResponseForGetAIModelEntity:
      type: object
      title: AI Model Entity
      description: AI Model item is successfully fetched
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          properties:
            "@context":
              type: string
              format: uri
              description: JSON-LD context URI
            type:
              type: array
              items:
                type: string
              description: Type tags from the ADeX vocabulary
            id:
              type: string
              pattern: "^[a-zA-Z0-9\\-]{36}$"
              description: Unique identifier of the model item
            name:
              type: string
              pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
              maxLength: 512
              description: An explanation about the purpose of this instance.
            organizationId:
              type: string
              pattern: "^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$"
              maxLength: 36
              description: UUID of the organization
            tags:
              type: array
              items:
                type: string
              description: Tags describing the model
            accessPolicy:
              type: string
              pattern: "^(RESTRICTED|OPEN|PRIVATE)$"
              description: Access policy for the model
            label:
              type: string
              maxLength: 512
              description: User-friendly label for the model
            description:
              type: string
              description: Detailed description of the model
            organizationType:
              type: string
              description: Type of organization providing the model
            department:
              type: string
              description: Department name
            modelType:
              type: string
              description: Type of model (e.g., ImageClassifier, TimeSeriesPredictor)
            fileFormat:
              type: string
              description: File format of the model
            itemStatus:
              type: string
              enum: [ "ACTIVE", "INACTIVE" ]
              description: Current status of the model
            itemCreatedAt:
              type: string
              format: date-time
              description: Creation timestamp of the model item
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        detail: 'Success: Item fetched successfully'
        results:
          '@context': 'https://agrijson.org'
          id: '337545aa-1fa5-4ca0-bf3d-072144dec5b6'
          ownerUserId: "b2c27f3f-2524-4a84-816e-91f9ab23f837"
          type:
            - 'adex:AiModel'
          name: 'ai-model-crop'
          label: 'Test-Crop Disease Detection Model'
          shortDescription: 'Detects diseases in crop leaves using image classification.'
          description: 'A test AI model for detecting crop disease with the help of infected leaf images.'
          tags:
            - ai
            - ml
            - model
            - ai-model
            - ml-model
            - machine
            - learning
            - machine learning
            - training
            - algorithm
          organizationId: '337545aa-1fa5-4ca0-bf3d-072144dec5b6'
          accessPolicy: 'RESTRICTED'
          organizationType: 'Private'
          department: 'Agriculture and Co-operation'
          modelType: 'ImageClassifier'
          fileFormat: 'ipynb'
          industry: 'Agriculture'
          uploadedBy: 'john.doe@datakaveri.org'
          license: 'MIT'
          fileSize: '15MB'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-05T02:09:10+0530"
    successResponseForGetDataBankEntity:
      type: object
      title: DataBank Entity
      description: DataBank item is successfully fetched
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          description: DataBank entity response body
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        results:
          '@context': "https://agrijson.org"
          type:
            - "adex:DataBank"
          id: "e27a1f6c-6a1b-45b8-a9f5-0c7424d1f0d1"
          ownerUserId: "b2c27f3f-2524-4a84-816e-91f9ab23f837"
          name: 'subdistrict-weather-info'
          label: 'Weather insights for subdistricts'
          shortDescription: 'A short description about the dataset'
          description: 'Dataset providing weather information such as temperature and rainfall for subdistricts across a state.'
          tags:
            - environment
            - weather
            - rainfall
            - temperature
          organizationId: '{{UUID}}'
          accessPolicy: 'RESTRICTED'
          organizationType: 'Private'
          fileFormat: 'xlsx'
          dataReadiness: 85
          department: 'Department of IT, Electronics and Communication'
          resourceType: 'DATASET'
          industry: 'Climate Research'
          uploadedBy: 'john.doe@datakaveri.org'
          geoCoverage: 'Karnataka'
          yearRange: '2015-2023'
          verifiedBy: 'Ministry of Earth Sciences'
          uploadFrequency: 'Weekly'
          license: 'CC-BY 4.0'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-05T02:09:10+0530"
        detail: "Success: Item fetched Successfully"
    successResponseForGetAdexAppsEntity:
      type: object
      title: ADeX Apps Entity
      description: ADeX Potential Application item is successfully fetched
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human-readable title for the message response
        detail:
          type: string
          description: Detailed description of the type or response
        results:
          type: object
          description: ADeX Application entity response body
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: 'Success'
        detail: 'Success: Item fetched Successfully'
        results:
          '@context': "https://agrijson.org"
          id: 'f2c6a437-8109-4a2c-8923-efc2a9e6df1d'
          type:
            - 'adex:Apps'
          name: 'crop-disease-detector-app'
          label: 'Crop Disease Detection Application'
          shortDescription: 'An AI-powered application to detect crop diseases early using leaf imagery.'
          description: 'A potential application designed to detect crop diseases from infected leaf images using AI/ML models. It supports early intervention and yield optimization by analyzing input data and recommending treatments.'
          tags:
            - ai
            - ml
            - model
            - ai-model
            - ml-model
            - machine
            - learning
            - machine learning
            - training
            - algorithm
          organizationType: 'Private'
          department: 'Agriculture and Co-operation'
          uploadedBy: 'cdpg@datakaveri.org'
          fileFormat: 'xlsx'
          accessPolicy: 'Public'
          canBeUsedFor:
            cropMonitoring: 'Detect and classify diseases in crops using image input'
            yieldOptimization: 'Improve crop yield by early detection of diseases'
          dataInputsAndAiTechniques:
            Input Data Banks:
              - 'Annotated Leaf Image Dataset'
              - 'Crop Type Classification Data'
            Expected Output:
              - 'Disease Type'
              - 'Confidence Score'
              - 'Recommended Treatment'
            AI Models:
              - 'Convolutional Neural Networks'
              - 'Transfer Learning'
            Potential Benefits:
              - 'Early detection of crop diseases'
              - 'Reduction in crop loss'
              - 'Better planning and resource allocation'
          itemStatus: "ACTIVE"
          itemCreatedAt: "2024-01-05T02:09:10+0530"
    successResponseForAutocompleteFuzzyTextSearch:
      type: object
      title: search by text
      properties:
        type:
          type: string
          description: URN type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human-readable title for the message response.
        pagination:
          type: object
          properties:
            page:
              type: integer
              description: Current page number.
            size:
              type: integer
              description: Number of items per page.
            totalCount:
              type: integer
              description: Total number of items across all pages.
            totalPages:
              type: integer
              description: Total number of pages.
            hasNext:
              type: boolean
              description: Whether there is a next page.
            hasPrevious:
              type: boolean
              description: Whether there is a previous page.
          required:
            - page
            - size
            - totalCount
            - totalPages
            - hasNext
            - hasPrevious
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Resource identifier.
              label:
                type: string
                description: Label of the resource.
              name:
                type: string
                description: Name of the resource.
              description:
                type: string
                description: Description of the resource.
              tags:
                type: array
                items:
                  type: string
                description: List of tags associated with the resource.
            required:
              - id
              - label
              - name
              - description
              - tags
      required:
        - type
        - title
        - pagination
        - results
      example:
        type: "urn:dx:cat:Success"
        title: "Success"
        pagination:
          page: 1
          size: 100
          totalCount: 5
          totalPages: 1
          hasNext: false
          hasPrevious: false
        results:
          - id: "32cf54e7-be31-474c-ae4c-3d41e556dd2d"
            label: "Satellite-Derived Geospatial Layers"
            name: "satellite-derived-geospatial-layers"
            description: "The Satellite-Derived Geospatial Layers dataset provides high-resolution satellite imagery and geospatial data..."
            tags:
              - "Satellite"
              - "Geospatial"
          - id: "9c0737d6-17df-484f-a7f8-aa472002eae5"
            label: "Corporate Employee Performance Data"
            name: "corporate-employee-performance-data"
            description: "The Corporate Employee Performance Data set is a comprehensive collection of performance metrics, key performance indicators (KPIs)..."
            tags:
              - "Corporate"
              - "HR Analytics"
              - "Performance"
          - id: "f7c3489d-6a58-44a2-97f6-2dbd49291b3b"
            label: "AI-Based Traffic Congestion Prediction"
            name: "AI-Based Traffic Congestion Prediction"
            description: "The AI-Based Traffic Congestion Prediction tool is an advanced solution aimed at alleviating urban traffic issues..."
            tags:
              - "ai"
              - "ml"
              - "model"
              - "aimodel"
              - "mlmodel"
              - "smart cities"
              - "traffic"
              - "congestion"
              - "urban planning"
              - "transportation"
              - "optimization"
          - id: "a4e2f75c-91b7-4b6e-9de1-78f6c9f84e63"
            label: "AI-Powered High-Risk Pregnancy Detection"
            name: "AI-Powered High-Risk Pregnancy Detection"
            description: "The AI-Powered High-Risk Pregnancy Detection model leverages artificial intelligence to analyze antenatal records and identify pregnancies at high risk..."
            tags:
              - "ai"
              - "ml"
              - "model"
              - "aimodel"
              - "mlmodel"
              - "ai-model"
              - "ml-model"
              - "machine learning"
              - "pregnancy detection"
              - "healthcare"
              - "maternal health"
              - "high-risk pregnancy"
          - id: "2b1a2e8d-45f4-43a1-9e8e-d1f8ad1002bb"
            label: "School Dropout Risk Prediction Model"
            name: "school-dropout-risk-prediction-model"
            description: "The School Dropout Risk Prediction Model is an advanced AI-powered tool designed to predict the likelihood of students dropping out of school..."
            tags:
              - "ai"
              - "ml"
              - "model"
              - "aimodel"
              - "mlmodel"
              - "education"
              - "risk prediction"
              - "student analytics"
    successResponseForComplexSearch:
      type: object
      title: Complex search
      properties:
        type:
          type: string
          description: URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        pagination:
          type: object
          description: Pagination metadata for the results
          properties:
            page:
              type: integer
              description: Current page number
            size:
              type: integer
              description: Number of items per page
            totalCount:
              type: integer
              description: Total number of items across all pages
            totalPages:
              type: integer
              description: Total number of pages available
            hasNext:
              type: boolean
              description: Indicates if more pages are available
            hasPrevious:
              type: boolean
              description: Indicates if previous pages exist
          required:
            - page
            - size
            - totalCount
            - totalPages
            - hasNext
            - hasPrevious
        results:
          type: array
          items:
            type: object
            properties:
              type:
                type: array
                items:
                  type: string
                description: List of resource types
              id:
                type: string
                description: Resource identifier
              department:
                type: string
                description: Department name
              itemCreatedAt:
                type: string
                format: date-time
                description: Item creation timestamp in ISO 8601 format
            required:
              - type
              - id
              - department
              - itemCreatedAt
      required:
        - type
        - title
        - pagination
        - results
      example:
        type: "urn:dx:cat:Success"
        title: "Success"
        pagination:
          page: 1
          size: 25
          totalCount: 1
          totalPages: 1
          hasNext: false
          hasPrevious: false
        results:
          - type:
              - "adex:DataBank"
            id: "32cf54e7-be31-474c-ae4c-3d41e556dd2d"
            department: "Environment Forests Science and Technology"
            itemCreatedAt: "2025-04-15T10:30:00Z"
    successResponseForSearchByItemType:
      type: object
      title: search by item type
      properties:
        type:
          type: string
          description: URN type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human-readable title for the message response.
        pagination:
          type: object
          description: Pagination metadata for the results.
          properties:
            page:
              type: integer
              description: Current page number.
            size:
              type: integer
              description: Number of items per page.
            totalCount:
              type: integer
              description: Total number of items across all pages.
            totalPages:
              type: integer
              description: Total number of pages available.
            hasNext:
              type: boolean
              description: Indicates if more pages are available.
            hasPrevious:
              type: boolean
              description: Indicates if previous pages exist.
          required:
            - page
            - size
            - totalCount
            - totalPages
            - hasNext
            - hasPrevious
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Resource identifier.
            required:
              - id
      required:
        - type
        - title
        - pagination
        - results
      example:
        type: "urn:dx:cat:Success"
        title: "Success"
        pagination:
          page: 1
          size: 100
          totalCount: 3
          totalPages: 1
          hasNext: false
          hasPrevious: false
        results:
          - id: "a4e3b98f-d073-4a2f-8587-e8d1718f2a89"
          - id: "d7d34f8d-8cd4-4a68-8a4d-3b7fc5e8bb13"
          - id: "2b1a2e8d-45f4-43a1-9e8e-d1f8ad1002bb"
    successResponseForRangeSearch:
      type: object
      title: Range search
      properties:
        type:
          type: string
          description: URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        pagination:
          type: object
          description: Pagination metadata for the results
          properties:
            page:
              type: integer
              description: Current page number
            size:
              type: integer
              description: Number of items per page
            totalCount:
              type: integer
              description: Total number of items across all pages
            totalPages:
              type: integer
              description: Total number of pages available
            hasNext:
              type: boolean
              description: Indicates if more pages are available
            hasPrevious:
              type: boolean
              description: Indicates if previous pages exist
          required:
            - page
            - size
            - totalCount
            - totalPages
            - hasNext
            - hasPrevious
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Resource identifier
              tags:
                type: array
                items:
                  type: string
                description: List of tags associated with the resource
              dataReadiness:
                type: integer
                description: Optional field indicating how ready the data is (if applicable)
            required:
              - id
              - tags
      required:
        - type
        - title
        - pagination
        - results
      example:
        type: "urn:dx:cat:Success"
        title: "Success"
        pagination:
          page: 1
          size: 25
          totalCount: 5
          totalPages: 1
          hasNext: false
          hasPrevious: false
        results:
          - id: "32cf54e7-be31-474c-ae4c-3d41e556dd2d"
            tags:
              - "Satellite"
              - "Geospatial"
          - id: "861bc29a-fca7-45b5-b4c8-5b07dc88a594"
            tags:
              - "Transport"
              - "Network"
          - id: "d09a4b85-3899-4bfc-93f4-430bba8aefb4"
            tags:
              - "Maternal Health"
              - "Healthcare"
              - "Community Health"
          - id: "28653cd7-9715-47d5-b12b-9d725ecfcad0"
            tags:
              - "Transport"
              - "Railway"
          - id: "9c0737d6-17df-484f-a7f8-aa472002eae5"
            tags:
              - "Corporate"
              - "HR Analytics"
              - "Performance"
            dataReadiness: 85
    successResponseForTemporalSearch:
      type: object
      title: Temporal search
      properties:
        type:
          type: string
          description: URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          type: string
          description: A human-readable title for the message response
        pagination:
          type: object
          description: Pagination metadata for the results.
          properties:
            page:
              type: integer
              description: Current page number.
            size:
              type: integer
              description: Number of items per page.
            totalCount:
              type: integer
              description: Total number of items across all pages.
            totalPages:
              type: integer
              description: Total number of pages available.
            hasNext:
              type: boolean
              description: Indicates if more pages are available.
            hasPrevious:
              type: boolean
              description: Indicates if previous pages exist.
          required:
            - page
            - size
            - totalCount
            - totalPages
            - hasNext
            - hasPrevious
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Resource identifier
              tags:
                type: array
                items:
                  type: string
                description: List of tags associated with the resource
              itemCreatedAt:
                type: string
                format: date-time
                description: Item creation timestamp in ISO 8601 format
            required:
              - id
              - tags
              - itemCreatedAt
      required:
        - type
        - title
        - pagination
        - results
      example:
        type: "urn:dx:cat:Success"
        title: "Success"
        pagination:
          page: 1
          size: 50
          totalCount: 3
          totalPages: 1
          hasNext: false
          hasPrevious: false
        results:
          - id: "a4e3b98f-d073-4a2f-8587-e8d1718f2a89"
            tags:
              - "ai"
              - "ml"
              - "model"
              - "aimodel"
              - "grievance classification"
              - "telugu"
              - "text classification"
              - "machine learning"
            itemCreatedAt: "2025-04-15T10:30:00Z"
          - id: "d7d34f8d-8cd4-4a68-8a4d-3b7fc5e8bb13"
            tags:
              - "ai"
              - "ml"
              - "model"
              - "aimodel"
              - "mlmodel"
              - "crop disease detection"
              - "plant health"
              - "agriculture"
            itemCreatedAt: "2025-04-15T10:30:00Z"
          - id: "2b1a2e8d-45f4-43a1-9e8e-d1f8ad1002bb"
            tags:
              - "ai"
              - "ml"
              - "model"
              - "aimodel"
              - "mlmodel"
              - "education"
              - "risk prediction"
              - "student analytics"
            itemCreatedAt: "2025-04-15T10:30:00Z"
    errorInvalidSchema:
      type: object
      title: Response - invalid schema
      description: Invalid Schema response schema
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: urn:dx:cat:InvalidSchema
        title: Invalid Schema
        detail: Invalid Schema
        results:
          - '[ECMA 262 regex "^[a-zA-Z0-9]([\w-]*[a-zA-Z0-9 ])?$" does not match input string "bgfnbgj!!!"]'

    errorInvalidSchema2:
      type: object
      title: Response - invalid schema
      description: Invalid Schema response schema
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: urn:dx:cat:InvalidSchema
        title: Invalid Schema
        detail: Invalid Schema
        results:
          - '[ECMA 262 regex "^[a-zA-Z0-9]([\w-]*[a-zA-Z0-9 ])?$" does not match input string "bgfnbgj!!!"]'

    errorInvalidUUID:
      type: object
      title: Response  - invalid UUID
      description: Invalid UUID response schema
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: urn:dx:cat:InvalidSchema
        title: Invalid Schema
        detail: Invalid Schema
        results: [ ]
    errorInvalidLinks:
      type: object
      title: Response  - invalid links
      description: Invalid Links response schema
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: urn:dx:cat:LinkValidationFailed
        title: Link Validation Failed
        detail: Provider not found
    errorResponseWithObjects:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          description: A human readable title to the message response.
      required:
        - type
      example:
        totalHits: 10
        results:
          - { }
        type: <error urn>
        title: <error title
        detail: <error detail description>
    updateItemNotFound:
      type: object
      title: Document not found
      properties:
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human readable title to the message response.\
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response

      description: Update Item Not Found
      example:
        type: urn:dx:cat:ItemNotFound
        title: Item is not found
        results:
          - id: eba4c1dc-8713-26d7-87e6-ec4608473bb4
            method: update
            title: failed
            detail: 'Fail: Doc doesn''t exist, can''t update'
        detail: 'Fail: Doc doesn''t exist, can''t update'

    exampleEntityAIModel:
      type: object
      title: AI Model entity
      description: An example AI model entity for first-time onboarding (without system-generated fields like itemCreatedAt or itemStatus)
      properties:
        '@context':
          type: string
          format: uri
        id:
          type: string
          pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'
        name:
          type: string
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _\\-:,;)(]*$"
          maxLength: 512
        type:
          type: array
          items:
            type: string
        label:
          type: string
          maxLength: 512
        shortDescription:
          type: string
          maxLength: 3200
        description:
          type: string
          maxLength: 12000
        tags:
          type: array
          items:
            type: string
        accessPolicy:
          type: string
          pattern: '^(RESTRICTED|OPEN|PRIVATE)$'
        organizationType:
          type: string
          enum: [ 'Private', 'Public', "Academic Institution", "NGO/Non-profit", "NA", '' ]
        organizationId:
          type: string
          pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'
        department:
          type: string
        modelType:
          type: string
        fileFormat:
          type: string
        industry:
          type: string
        license:
          type: string
        fileSize:
          type: string
      required:
        - name
        - type
        - label
        - shortDescription
        - description
        - tags
        - accessPolicy
        - organizationType
        - organizationId
        - modelType
        - fileFormat
        - industry
        - license
        - fileSize
      additionalProperties: true
      example:
        '@context': 'https://agrijson.org'
        id: '337545aa-1fa5-4ca0-bf3d-072144dec5b6'
        type:
          - 'adex:AiModel'
        name: 'ai-model-crop'
        label: 'Test-Crop Disease Detection Model'
        shortDescription: 'Detects diseases in crop leaves using image classification.'
        description: 'A test AI model for detecting crop disease with the help of infected leaf images.'
        tags:
          - ai
          - ml
          - model
          - ai-model
          - ml-model
          - machine
          - learning
          - machine learning
          - training
          - algorithm
        organizationId: '337545aa-1fa5-4ca0-bf3d-072144dec5b6'
        accessPolicy: 'RESTRICTED'
        organizationType: 'Private'
        department: 'Agriculture and Co-operation'
        modelType: 'ImageClassifier'
        fileFormat: 'ipynb'
        industry: 'Agriculture'
        license: 'MIT'
        fileSize: '15MB'
    exampleEntityDataBank:
      type: object
      title: Data Bank entity
      description: An example entity without ID (For first time onboarding)
      properties:
        '@context':
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: array
          items:
            type: string
        label:
          type: string
          maxLength: 512
        shortDescription:
          type: string
          maxLength: 3200
        description:
          type: string
          maxLength: 12000
        tags:
          type: array
          items:
            type: string
        organizationId:
          type: string
          format: uuid
        accessPolicy:
          type: string
        organizationType:
          type: string
        fileFormat:
          type: string
        dataReadiness:
          type: integer
        department:
          type: string
        resourceType:
          type: string
        industry:
          type: string
        geoCoverage:
          type: string
        yearRange:
          type: string
        verifiedBy:
          type: string
        uploadFrequency:
          type: string
        license:
          type: string
      required:
        - name
        - type
        - label
        - shortDescription
        - description
        - tags
        - organizationId
        - accessPolicy
        - organizationType
        - fileFormat
        - industry
        - geoCoverage
        - yearRange
        - verifiedBy
        - uploadFrequency
        - license
      additionalProperties: true
      example:
        name: 'subdistrict-weather-info'
        type:
          - 'adex:DataBank'
        label: 'Weather insights for subdistricts'
        shortDescription: 'A short description about the dataset'
        description: 'Dataset providing weather information such as temperature and rainfall for subdistricts across a state.'
        tags:
          - environment
          - weather
          - rainfall
          - temperature
        organizationId: '{{UUID}}'
        accessPolicy: 'RESTRICTED'
        organizationType: 'Private'
        fileFormat: 'xlsx'
        dataReadiness: 85
        department: 'Department of IT, Electronics and Communication'
        resourceType: 'DATASET'
        industry: 'Climate Research'
        geoCoverage: 'Karnataka'
        yearRange: '2015-2023'
        verifiedBy: 'Ministry of Earth Sciences'
        uploadFrequency: 'Weekly'
        license: 'CC-BY 4.0'
    exampleEntityPotentialApps:
      type: object
      title: AI Use Case Template Schema
      description: Schema for defining structured AI use case templates with sections, subsections, and bullet points.
      required:
        - sections
        - name
        - type
        - tags
        - label
        - industry
        - shortDescription
        - description
        - organizationType
        - accessPolicy
      properties:
        sections:
          type: array
          description: Main sections of the use case document
          items:
            type: object
            required:
              - title
            properties:
              title:
                type: string
              content:
                type: string
              points:
                type: array
                items:
                  type: string
              subsections:
                type: array
                items:
                  type: object
                  anyOf:
                    - required: [ "subtitle", "points" ]
                    - required: [ "subtitle", "content" ]
                  properties:
                    subtitle:
                      type: string
                    content:
                      type: string
                    points:
                      type: array
                      items:
                        type: string
            anyOf:
              - required: [ "content" ]
              - required: [ "points" ]
              - required: [ "subsections" ]
        name:
          type: string
          maxLength: 512
        type:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        label:
          type: string
          maxLength: 512
        industry:
          type: string
        shortDescription:
          type: string
          maxLength: 3200
        description:
          type: string
          maxLength: 12000
        organizationType:
          type: string
          enum: [ "Private", "Public", "Academic Institution", "NGO/Non-profit", "Other", "NA", "" ]
        accessPolicy:
          type: string
          pattern: "^(RESTRICTED|OPEN|PRIVATE)$"
      additionalProperties: true
      example:
        '@context': 'https://agrijson.org'
        id: 'f2c6a437-8109-4a2c-8923-efc2a9e6df1d'
        type:
          - 'adex:Apps'
        name: 'crop-disease-detector-app'
        industry: 'Agriculture'
        label: 'Crop Disease Detection Application'
        shortDescription: 'An AI-powered application to detect crop diseases early using leaf imagery.'
        description: 'A potential application designed to detect crop diseases from infected leaf images using AI/ML models. It supports early intervention and yield optimization by analyzing input data and recommending treatments.'
        tags:
          - ai
          - ml
          - model
          - ai-model
          - ml-model
          - machine
          - learning
          - machine learning
          - training
          - algorithm
        organizationType: 'Private'
        "sections": [
          {
            "title": "Problem Statement",
            "content": "Farmers often struggle with late-stage identification of crop diseases, leading to reduced yields and delayed treatments."
          } ]

    unAuthorizedAccess:
      type: object
      title: Common to unauthorized access response
      description: Response for 401 invalid token
      properties:
        type:
          type: string
          description: |
            Indicates that the token sent in request header is invalid
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:InvalidAuthorizationToken'
        title: Token is invalid
        detail: "failed to decode/validate jwt token : Invalid format for JWT"

    invalidResponseForWrongLimitValues:
      type: object
      title: Example Response for get mlayer for provider or domain or instance
      description: Invalid parameter in the given request
      properties:
        type:
          type: string
          description: |
            Indicates Invalid parameter in the given request
        title:
          description: A human readable title to the message response
      required:
        - type
      example:
        type: 'urn:dx:cat:InvalidParamValue'
        title: Invalid value for a query param
        detail: Invalid limit parameter.
    invalidResponseForWrongOffsetValues:
      type: object
      title: Example Response for get mlayer for provider or domain or instance
      description: Invalid parameter in the given request
      properties:
        type:
          type: string
          description: |
            Indicates Invalid parameter in the given request
        title:
          description: A human readable title to the message response
      required:
        - type
      example:
        type: 'urn:dx:cat:InvalidParamValue'
        title: Invalid value for a query param
        detail: Invalid offset parameter.